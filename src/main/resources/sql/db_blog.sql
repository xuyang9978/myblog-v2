/*
 Navicat Premium Data Transfer

 Source Server         : local-xuyang
 Source Server Type    : MySQL
 Source Server Version : 50727
 Source Host           : localhost:3306
 Source Schema         : db_blog

 Target Server Type    : MySQL
 Target Server Version : 50727
 File Encoding         : 65001

 Date: 14/08/2020 11:23:28
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `aid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '文章 id',
  `title` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章标题',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章内容',
  `html_content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章内容的 html 格式',
  `updated_time` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '文章最近更新时间',
  `cid` bigint(20) NOT NULL COMMENT '文章所属分类 id',
  `deleted` int(11) NOT NULL DEFAULT 0 COMMENT '逻辑删除，0 表示未删除，1 表示已删除',
  `created_time` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '文章发布时间',
  `author` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章作者',
  PRIMARY KEY (`aid`) USING BTREE,
  INDEX `article_category_cid_fk`(`cid`) USING BTREE,
  CONSTRAINT `article_category_cid_fk` FOREIGN KEY (`cid`) REFERENCES `category` (`cid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 55 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '文章表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (3, '第一篇文章', '## 今日内容\n![](http://qdv1su0k7.bkt.clouddn.com/Fv9a7QR39ANEqbSVnRbG-esiQhVE:style)\n\n\n\n![](http://qdv1su0k7.bkt.clouddn.com/FpHLXo7Mk5Z8i_WlVCPD1T7w7DxJ:style)\n\n\n![](http://qdv1su0k7.bkt.clouddn.com/FjA9Pxu9BesdvlPJP1zvtHT-PK3v:style)\n# AJAX：\n\n	1. 概念： ASynchronous JavaScript And XML	             异步的JavaScript 和 XML\n		1. 异步和同步：客户端和服务器端相互通信的基础上\n			* 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。\n			* 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。\n	\n			Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] \n			通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n			传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。\n	\n			提升用户的体验\n	\n	2. 实现方式：\n		1. 原生的JS实现方式（了解）\n					 //1.创建核心对象\n		            var xmlhttp;\n		            if (window.XMLHttpRequest)\n		            {// code for IE7+, Firefox, Chrome, Opera, Safari\n		                xmlhttp=new XMLHttpRequest();\n		            }\n		            else\n		            {// code for IE6, IE5\n		                xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n		            }\n		\n		            //2. 建立连接\n		            /*\n		                参数：\n		                    1. 请求方式：GET、POST\n		                        * get方式，请求参数在URL后边拼接。send方法为空参\n		                        * post方式，请求参数在send方法中定义\n		                    2. 请求的URL：\n		                    3. 同步或异步请求：true（异步）或 false（同步）\n		\n		             */\n		            xmlhttp.open(\"GET\",\"ajaxServlet?username=tom\",true);\n		\n		            //3.发送请求\n		            xmlhttp.send();\n		\n		            //4.接受并处理来自服务器的响应结果\n		            //获取方式 ：xmlhttp.responseText\n		            //什么时候获取？当服务器响应成功后再获取\n		\n		            //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。\n		            xmlhttp.onreadystatechange=function()\n		            {\n		                //判断readyState就绪状态是否为4，判断status响应状态码是否为200\n		                if (xmlhttp.readyState==4 && xmlhttp.status==200)\n		                {\n		                   //获取服务器的响应结果\n		                    var responseText = xmlhttp.responseText;\n		                    alert(responseText);\n		                }\n		            }\n		2. JQeury实现方式\n			1. $.ajax()\n				* 语法：$.ajax({键值对});\n				 //使用$.ajax()发送异步请求\n		            $.ajax({\n		                url:\"ajaxServlet1111\" , // 请求路径\n		                type:\"POST\" , //请求方式\n		                //data: \"username=jack&age=23\",//请求参数\n		                data:{\"username\":\"jack\",\"age\":23},\n		                success:function (data) {\n		                    alert(data);\n		                },//响应成功后的回调函数\n		                error:function () {\n		                    alert(\"出错啦...\")\n		                },//表示如果请求响应出现错误，会执行的回调函数\n		\n		                dataType:\"text\"//设置接受到的响应数据的格式\n		            });\n			2. $.get()：发送get请求\n				* 语法：$.get(url, [data], [callback], [type])\n					* 参数：\n						* url：请求路径\n						* data：请求参数\n						* callback：回调函数\n						* type：响应结果的类型\n	\n			3. $.post()：发送post请求\n				* 语法：$.post(url, [data], [callback], [type])\n					* 参数：\n						* url：请求路径\n						* data：请求参数\n						* callback：回调函数\n						* type：响应结果的类型\n\n\n\n# JSON：\n\n	1. 概念： JavaScript Object Notation		JavaScript对象表示法\n		Person p = new Person();\n		p.setName(\"张三\");\n		p.setAge(23);\n		p.setGender(\"男\");\n	\n		var p = {\"name\":\"张三\",\"age\":23,\"gender\":\"男\"};\n	\n		* json现在多用于存储和交换文本信息的语法\n		* 进行数据的传输\n		* JSON 比 XML 更小、更快，更易解析。\n	\n	2. 语法：\n		1. 基本规则\n			* 数据在名称/值对中：json数据是由键值对构成的\n				* 键用引号(单双都行)引起来，也可以不使用引号\n				* 值得取值类型：\n					1. 数字（整数或浮点数）\n					2. 字符串（在双引号中）\n					3. 逻辑值（true 或 false）\n					4. 数组（在方括号中）	{\"persons\":[{},{}]}\n					5. 对象（在花括号中） {\"address\":{\"province\"：\"陕西\"....}}\n					6. null\n			* 数据由逗号分隔：多个键值对由逗号分隔\n			* 花括号保存对象：使用{}定义json 格式\n			* 方括号保存数组：[]\n		2. 获取数据:\n			1. json对象.键名\n			2. json对象[\"键名\"]\n			3. 数组对象[索引]\n			4. 遍历\n					 //1.定义基本格式\n			        var person = {\"name\": \"张三\", age: 23, \'gender\': true};\n			\n			        var ps = [{\"name\": \"张三\", \"age\": 23, \"gender\": true},\n			            {\"name\": \"李四\", \"age\": 24, \"gender\": true},\n			            {\"name\": \"王五\", \"age\": 25, \"gender\": false}];\n\n\n​			\n​			\n​			\n\n			        //获取person对象中所有的键和值\n			        //for in 循环\n			       /* for(var key in person){\n			            //这样的方式获取不行。因为相当于  person.\"name\"\n			            //alert(key + \":\" + person.key);\n			            alert(key+\":\"+person[key]);\n			        }*/\n			\n			       //获取ps中的所有值\n			        for (var i = 0; i < ps.length; i++) {\n			            var p = ps[i];\n			            for(var key in p){\n			                alert(key+\":\"+p[key]);\n			            }\n			        }\n\n\n	3. JSON数据和Java对象的相互转换\n	\n		* JSON解析器：\n			* 常见的解析器：Jsonlib，Gson，fastjson，jackson\n		\n		1. JSON转为Java对象\n			1. 导入jackson的相关jar包\n			2. 创建Jackson核心对象 ObjectMapper\n			3. 调用ObjectMapper的相关方法进行转换\n				1. readValue(json字符串数据,Class)\n		2. Java对象转为JSON\n			1. 使用步骤：\n				1. 导入jackson的相关jar包\n				2. 创建Jackson核心对象 ObjectMapper\n				3. 调用ObjectMapper的相关方法进行转换\n					1. 转换方法：\n						* writeValue(参数1，obj):\n		                    参数1：\n		                        File：将obj对象转换为JSON字符串，并保存到指定的文件中\n		                        Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中\n		                        OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中\n		                * writeValueAsString(obj):将对象转为json字符串\n	\n					2. 注解：\n						1. @JsonIgnore：排除属性。\n						2. @JsonFormat：属性值的格式化\n							* @JsonFormat(pattern = \"yyyy-MM-dd\")\n	\n					3. 复杂java对象转换\n						1. List：数组\n						2. Map：对象格式一致\n\n\n# 案例：\n\n	* 校验用户名是否存在\n		1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：\n			1. $.get(type):将最后一个参数type指定为\"json\"\n			2. 在服务器端设置MIME类型\n				response.setContentType(\"application/json;charset=utf-8\");\n\n\n\n\n\n', '<h2 id=\"h2-u4ECAu65E5u5185u5BB9\"><a name=\"今日内容\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>今日内容</h2><p><img src=\"http://qdv1su0k7.bkt.clouddn.com/Fv9a7QR39ANEqbSVnRbG-esiQhVE:style\" alt=\"\"></p>\n<p><img src=\"http://qdv1su0k7.bkt.clouddn.com/FpHLXo7Mk5Z8i_WlVCPD1T7w7DxJ:style\" alt=\"\"></p>\n<p><img src=\"http://qdv1su0k7.bkt.clouddn.com/FjA9Pxu9BesdvlPJP1zvtHT-PK3v:style\" alt=\"\"></p>\n<h1 id=\"h1-ajax-\"><a name=\"AJAX：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>AJAX：</h1><pre><code>1. 概念： ASynchronous JavaScript And XML                 异步的JavaScript 和 XML\n    1. 异步和同步：客户端和服务器端相互通信的基础上\n        * 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。\n        * 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。\n\n        Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] \n        通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n        传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。\n\n        提升用户的体验\n\n2. 实现方式：\n    1. 原生的JS实现方式（了解）\n                 //1.创建核心对象\n                var xmlhttp;\n                if (window.XMLHttpRequest)\n                {// code for IE7+, Firefox, Chrome, Opera, Safari\n                    xmlhttp=new XMLHttpRequest();\n                }\n                else\n                {// code for IE6, IE5\n                    xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n                }\n\n                //2. 建立连接\n                /*\n                    参数：\n                        1. 请求方式：GET、POST\n                            * get方式，请求参数在URL后边拼接。send方法为空参\n                            * post方式，请求参数在send方法中定义\n                        2. 请求的URL：\n                        3. 同步或异步请求：true（异步）或 false（同步）\n\n                 */\n                xmlhttp.open(&quot;GET&quot;,&quot;ajaxServlet?username=tom&quot;,true);\n\n                //3.发送请求\n                xmlhttp.send();\n\n                //4.接受并处理来自服务器的响应结果\n                //获取方式 ：xmlhttp.responseText\n                //什么时候获取？当服务器响应成功后再获取\n\n                //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。\n                xmlhttp.onreadystatechange=function()\n                {\n                    //判断readyState就绪状态是否为4，判断status响应状态码是否为200\n                    if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)\n                    {\n                       //获取服务器的响应结果\n                        var responseText = xmlhttp.responseText;\n                        alert(responseText);\n                    }\n                }\n    2. JQeury实现方式\n        1. $.ajax()\n            * 语法：$.ajax({键值对});\n             //使用$.ajax()发送异步请求\n                $.ajax({\n                    url:&quot;ajaxServlet1111&quot; , // 请求路径\n                    type:&quot;POST&quot; , //请求方式\n                    //data: &quot;username=jack&amp;age=23&quot;,//请求参数\n                    data:{&quot;username&quot;:&quot;jack&quot;,&quot;age&quot;:23},\n                    success:function (data) {\n                        alert(data);\n                    },//响应成功后的回调函数\n                    error:function () {\n                        alert(&quot;出错啦...&quot;)\n                    },//表示如果请求响应出现错误，会执行的回调函数\n\n                    dataType:&quot;text&quot;//设置接受到的响应数据的格式\n                });\n        2. $.get()：发送get请求\n            * 语法：$.get(url, [data], [callback], [type])\n                * 参数：\n                    * url：请求路径\n                    * data：请求参数\n                    * callback：回调函数\n                    * type：响应结果的类型\n\n        3. $.post()：发送post请求\n            * 语法：$.post(url, [data], [callback], [type])\n                * 参数：\n                    * url：请求路径\n                    * data：请求参数\n                    * callback：回调函数\n                    * type：响应结果的类型\n</code></pre><h1 id=\"h1-json-\"><a name=\"JSON：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>JSON：</h1><pre><code>1. 概念： JavaScript Object Notation        JavaScript对象表示法\n    Person p = new Person();\n    p.setName(&quot;张三&quot;);\n    p.setAge(23);\n    p.setGender(&quot;男&quot;);\n\n    var p = {&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:23,&quot;gender&quot;:&quot;男&quot;};\n\n    * json现在多用于存储和交换文本信息的语法\n    * 进行数据的传输\n    * JSON 比 XML 更小、更快，更易解析。\n\n2. 语法：\n    1. 基本规则\n        * 数据在名称/值对中：json数据是由键值对构成的\n            * 键用引号(单双都行)引起来，也可以不使用引号\n            * 值得取值类型：\n                1. 数字（整数或浮点数）\n                2. 字符串（在双引号中）\n                3. 逻辑值（true 或 false）\n                4. 数组（在方括号中）    {&quot;persons&quot;:[{},{}]}\n                5. 对象（在花括号中） {&quot;address&quot;:{&quot;province&quot;：&quot;陕西&quot;....}}\n                6. null\n        * 数据由逗号分隔：多个键值对由逗号分隔\n        * 花括号保存对象：使用{}定义json 格式\n        * 方括号保存数组：[]\n    2. 获取数据:\n        1. json对象.键名\n        2. json对象[&quot;键名&quot;]\n        3. 数组对象[索引]\n        4. 遍历\n                 //1.定义基本格式\n                var person = {&quot;name&quot;: &quot;张三&quot;, age: 23, &#39;gender&#39;: true};\n\n                var ps = [{&quot;name&quot;: &quot;张三&quot;, &quot;age&quot;: 23, &quot;gender&quot;: true},\n                    {&quot;name&quot;: &quot;李四&quot;, &quot;age&quot;: 24, &quot;gender&quot;: true},\n                    {&quot;name&quot;: &quot;王五&quot;, &quot;age&quot;: 25, &quot;gender&quot;: false}];\n</code></pre><p>​<br>​<br>​            </p>\n<pre><code>                //获取person对象中所有的键和值\n                //for in 循环\n               /* for(var key in person){\n                    //这样的方式获取不行。因为相当于  person.&quot;name&quot;\n                    //alert(key + &quot;:&quot; + person.key);\n                    alert(key+&quot;:&quot;+person[key]);\n                }*/\n\n               //获取ps中的所有值\n                for (var i = 0; i &lt; ps.length; i++) {\n                    var p = ps[i];\n                    for(var key in p){\n                        alert(key+&quot;:&quot;+p[key]);\n                    }\n                }\n\n\n3. JSON数据和Java对象的相互转换\n\n    * JSON解析器：\n        * 常见的解析器：Jsonlib，Gson，fastjson，jackson\n\n    1. JSON转为Java对象\n        1. 导入jackson的相关jar包\n        2. 创建Jackson核心对象 ObjectMapper\n        3. 调用ObjectMapper的相关方法进行转换\n            1. readValue(json字符串数据,Class)\n    2. Java对象转为JSON\n        1. 使用步骤：\n            1. 导入jackson的相关jar包\n            2. 创建Jackson核心对象 ObjectMapper\n            3. 调用ObjectMapper的相关方法进行转换\n                1. 转换方法：\n                    * writeValue(参数1，obj):\n                        参数1：\n                            File：将obj对象转换为JSON字符串，并保存到指定的文件中\n                            Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中\n                            OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中\n                    * writeValueAsString(obj):将对象转为json字符串\n\n                2. 注解：\n                    1. @JsonIgnore：排除属性。\n                    2. @JsonFormat：属性值的格式化\n                        * @JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)\n\n                3. 复杂java对象转换\n                    1. List：数组\n                    2. Map：对象格式一致\n</code></pre><h1 id=\"h1--\"><a name=\"案例：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>案例：</h1><pre><code>* 校验用户名是否存在\n    1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：\n        1. $.get(type):将最后一个参数type指定为&quot;json&quot;\n        2. 在服务器端设置MIME类型\n            response.setContentType(&quot;application/json;charset=utf-8&quot;);\n</code></pre>', '2020-08-09 13:39:35', 8, 0, '2020-07-22 23:01:31', '徐杨');
INSERT INTO `article` VALUES (21, 's\'da\'s\'da', '大苏打大大\n![](http://qdv1su0k7.bkt.clouddn.com/Fi92mi1dQXvQ6HW4CyY4tCxEwrm4:style)', '<p>大苏打大大<br><img src=\"http://qdv1su0k7.bkt.clouddn.com/Fi92mi1dQXvQ6HW4CyY4tCxEwrm4:style\" alt=\"\"></p>\n', '2020-08-09 13:29:00', 1, 1, '2020-07-25 23:18:50', '徐sad穿着');
INSERT INTO `article` VALUES (22, 'dsad', 'dgfdhgbcvxc', '<p>dgfdhgbcvxc</p>\n', '2020-08-09 13:29:00', 1, 0, '2020-07-25 23:19:28', 'dfasd徐sad');
INSERT INTO `article` VALUES (23, 'xml学习笔记', '# 今日内容\n\n	1. XML\n		1. 概念\n		2. 语法\n		3. 解析\n\n\n## XML：\n\n	1. 概念：Extensible Markup Language 可扩展标记语言\n		* 可扩展：标签都是自定义的。 <user>  <student>\n	\n		* 功能\n			* 存储数据\n				1. 配置文件\n				2. 在网络中传输\n		* xml与html的区别\n			1. xml标签都是自定义的，html标签是预定义。\n			2. xml的语法严格，html语法松散\n			3. xml是存储数据的，html是展示数据\n	\n		* w3c:万维网联盟\n	\n	2. 语法：\n		* 基本语法：\n			1. xml文档的后缀名 .xml\n			2. xml第一行必须定义为文档声明\n			3. xml文档中有且仅有一个根标签\n			4. 属性值必须使用引号(单双都可)引起来\n			5. 标签必须正确关闭\n			6. xml标签名称区分大小写\n		* 快速入门：\n			<?xml version=\'1.0\' ?>\n			<users>\n				<user id=\'1\'>\n					<name>zhangsan</name>\n					<age>23</age>\n					<gender>male</gender>\n					<br/>\n				</user>\n				\n				<user id=\'2\'>\n					<name>lisi</name>\n					<age>24</age>\n					<gender>female</gender>\n				</user>\n			</users>\n			\n		* 组成部分：\n			1. 文档声明\n				1. 格式：<?xml 属性列表 ?>\n				2. 属性列表：\n					* version：版本号，必须的属性\n					* encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1\n					* standalone：是否独立\n						* 取值：\n							* yes：不依赖其他文件\n							* no：依赖其他文件\n			2. 指令(了解)：结合css的\n				* <?xml-stylesheet type=\"text/css\" href=\"a.css\" ?>\n			3. 标签：标签名称自定义的\n				* 规则：\n					* 名称可以包含字母、数字以及其他的字符 \n					* 名称不能以数字或者标点符号开始 \n					* 名称不能以字母 xml（或者 XML、Xml 等等）开始 \n					* 名称不能包含空格 \n	\n			4. 属性：\n				id属性值唯一\n			5. 文本：\n				* CDATA区：在该区域中的数据会被原样展示\n					* 格式：  <![CDATA[ 数据 ]]>\n\n\n​	\n\n		* 约束：规定xml文档的书写规则\n			* 作为框架的使用者(程序员)：\n				1. 能够在xml中引入约束文档\n				2. 能够简单的读懂约束文档\n			\n			* 分类：\n				1. DTD:一种简单的约束技术\n				2. Schema:一种复杂的约束技术\n\n\n			* DTD：\n				* 引入dtd文档到xml文档中\n					* 内部dtd：将约束规则定义在xml文档中\n					* 外部dtd：将约束的规则定义在外部的dtd文件中\n						* 本地：<!DOCTYPE 根标签名 SYSTEM \"dtd文件的位置\">\n						* 网络：<!DOCTYPE 根标签名 PUBLIC \"dtd文件名字\" \"dtd文件的位置URL\">\n\n\n			* Schema:\n				* 引入：\n					1.填写xml文档的根元素\n					2.引入xsi前缀.  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n					3.引入xsd文件命名空间.  xsi:schemaLocation=\"http://www.itcast.cn/xml  student.xsd\"\n					4.为每一个xsd约束声明一个前缀,作为标识  xmlns=\"http://www.itcast.cn/xml\" \n	\n				<students   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n					xmlns=\"http://www.itcast.cn/xml\"\n					xsi:schemaLocation=\"http://www.itcast.cn/xml  student.xsd\">\n\n\n​	\n\n	3. 解析：操作xml文档，将文档中的数据读取到内存中\n		* 操作xml文档\n			1. 解析(读取)：将文档中的数据读取到内存中\n			2. 写入：将内存中的数据保存到xml文档中。持久化的存储\n	\n		* 解析xml的方式：\n			1. DOM(一般用于服务器端)：将标记语言文档一次性加载进内存，在内存中形成一棵dom树\n				* 优点：操作方便，可以对文档进行CRUD的所有操作\n				* 缺点：占内存\n			2. SAX(一般用于客户端)：逐行读取，基于事件驱动的。\n				* 优点：不占内存。\n				* 缺点：只能读取，不能增删改\n\n\n​		\n\n		* xml常见的解析器：\n			1. JAXP：sun公司提供的解析器，支持dom和sax两种思想\n			2. DOM4J：一款非常优秀的解析器\n			3. Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n			4. PULL：Android操作系统内置的解析器，sax方式的。\n\n\n		* Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n			* 快速入门：\n				* 步骤：\n					1. 导入jar包\n					2. 获取Document对象\n					3. 获取对应的标签Element对象\n					4. 获取数据\n	\n			* 代码：\n				 //2.1获取student.xml的path\n		        String path = JsoupDemo1.class.getClassLoader().getResource(\"student.xml\").getPath();\n		        //2.2解析xml文档，加载文档进内存，获取dom树--->Document\n		        Document document = Jsoup.parse(new File(path), \"utf-8\");\n		        //3.获取元素对象 Element\n		        Elements elements = document.getElementsByTag(\"name\");\n		\n		        System.out.println(elements.size());\n		        //3.1获取第一个name的Element对象\n		        Element element = elements.get(0);\n		        //3.2获取数据\n		        String name = element.text();\n		        System.out.println(name);\n	\n		* 对象的使用：\n			1. Jsoup：工具类，可以解析html或xml文档，返回Document\n				* parse：解析html或xml文档，返回Document\n					* parse​(File in, String charsetName)：解析xml或html文件的。\n					* parse​(String html)：解析xml或html字符串\n					* parse​(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象\n			2. Document：文档对象。代表内存中的dom树\n				* 获取Element对象\n					* getElementById​(String id)：根据id属性值获取唯一的element对象\n					* getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n					* getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n					* getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n			3. Elements：元素Element对象的集合。可以当做 ArrayList<Element>来使用\n			4. Element：元素对象\n				1. 获取子元素对象\n					* getElementById​(String id)：根据id属性值获取唯一的element对象\n					* getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n					* getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n					* getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n	\n				2. 获取属性值\n					* String attr(String key)：根据属性名称获取属性值\n				3. 获取文本内容\n					* String text():获取文本内容\n					* String html():获取标签体的所有内容(包括子标签的字符串内容)\n			5. Node：节点对象\n				* 是Document和Element的父类\n\n\n​			\n\n		* 快捷查询方式：\n			1. selector:选择器\n				* 使用的方法：Elements	select​(String cssQuery)\n					* 语法：参考Selector类中定义的语法\n			2. XPath：XPath即为XML路径语言，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言\n				* 使用Jsoup的Xpath需要额外导入jar包。\n				* 查询w3cshool参考手册，使用xpath的语法完成查询\n				* 代码：\n					//1.获取student.xml的path\n			        String path = JsoupDemo6.class.getClassLoader().getResource(\"student.xml\").getPath();\n			        //2.获取Document对象\n			        Document document = Jsoup.parse(new File(path), \"utf-8\");\n			\n			        //3.根据document对象，创建JXDocument对象\n			        JXDocument jxDocument = new JXDocument(document);\n			\n			        //4.结合xpath语法查询\n			        //4.1查询所有student标签\n			        List<JXNode> jxNodes = jxDocument.selN(\"//student\");\n			        for (JXNode jxNode : jxNodes) {\n			            System.out.println(jxNode);\n			        }\n			\n			        System.out.println(\"--------------------\");\n			\n			        //4.2查询所有student标签下的name标签\n			        List<JXNode> jxNodes2 = jxDocument.selN(\"//student/name\");\n			        for (JXNode jxNode : jxNodes2) {\n			            System.out.println(jxNode);\n			        }\n			\n			        System.out.println(\"--------------------\");\n			\n			        //4.3查询student标签下带有id属性的name标签\n			        List<JXNode> jxNodes3 = jxDocument.selN(\"//student/name[@id]\");\n			        for (JXNode jxNode : jxNodes3) {\n			            System.out.println(jxNode);\n			        }\n			        System.out.println(\"--------------------\");\n			        //4.4查询student标签下带有id属性的name标签 并且id属性值为itcast\n			\n			        List<JXNode> jxNodes4 = jxDocument.selN(\"//student/name[@id=\'itcast\']\");\n			        for (JXNode jxNode : jxNodes4) {\n			            System.out.println(jxNode);\n			        }', '<h1 id=\"h1-u4ECAu65E5u5185u5BB9\"><a name=\"今日内容\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>今日内容</h1><pre><code>1. XML\n    1. 概念\n    2. 语法\n    3. 解析\n</code></pre><h2 id=\"h2-xml-\"><a name=\"XML：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>XML：</h2><pre><code>1. 概念：Extensible Markup Language 可扩展标记语言\n    * 可扩展：标签都是自定义的。 &lt;user&gt;  &lt;student&gt;\n\n    * 功能\n        * 存储数据\n            1. 配置文件\n            2. 在网络中传输\n    * xml与html的区别\n        1. xml标签都是自定义的，html标签是预定义。\n        2. xml的语法严格，html语法松散\n        3. xml是存储数据的，html是展示数据\n\n    * w3c:万维网联盟\n\n2. 语法：\n    * 基本语法：\n        1. xml文档的后缀名 .xml\n        2. xml第一行必须定义为文档声明\n        3. xml文档中有且仅有一个根标签\n        4. 属性值必须使用引号(单双都可)引起来\n        5. 标签必须正确关闭\n        6. xml标签名称区分大小写\n    * 快速入门：\n        &lt;?xml version=&#39;1.0&#39; ?&gt;\n        &lt;users&gt;\n            &lt;user id=&#39;1&#39;&gt;\n                &lt;name&gt;zhangsan&lt;/name&gt;\n                &lt;age&gt;23&lt;/age&gt;\n                &lt;gender&gt;male&lt;/gender&gt;\n                &lt;br/&gt;\n            &lt;/user&gt;\n\n            &lt;user id=&#39;2&#39;&gt;\n                &lt;name&gt;lisi&lt;/name&gt;\n                &lt;age&gt;24&lt;/age&gt;\n                &lt;gender&gt;female&lt;/gender&gt;\n            &lt;/user&gt;\n        &lt;/users&gt;\n\n    * 组成部分：\n        1. 文档声明\n            1. 格式：&lt;?xml 属性列表 ?&gt;\n            2. 属性列表：\n                * version：版本号，必须的属性\n                * encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1\n                * standalone：是否独立\n                    * 取值：\n                        * yes：不依赖其他文件\n                        * no：依赖其他文件\n        2. 指令(了解)：结合css的\n            * &lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;a.css&quot; ?&gt;\n        3. 标签：标签名称自定义的\n            * 规则：\n                * 名称可以包含字母、数字以及其他的字符 \n                * 名称不能以数字或者标点符号开始 \n                * 名称不能以字母 xml（或者 XML、Xml 等等）开始 \n                * 名称不能包含空格 \n\n        4. 属性：\n            id属性值唯一\n        5. 文本：\n            * CDATA区：在该区域中的数据会被原样展示\n                * 格式：  &lt;![CDATA[ 数据 ]]&gt;\n</code></pre><p>​    </p>\n<pre><code>    * 约束：规定xml文档的书写规则\n        * 作为框架的使用者(程序员)：\n            1. 能够在xml中引入约束文档\n            2. 能够简单的读懂约束文档\n\n        * 分类：\n            1. DTD:一种简单的约束技术\n            2. Schema:一种复杂的约束技术\n\n\n        * DTD：\n            * 引入dtd文档到xml文档中\n                * 内部dtd：将约束规则定义在xml文档中\n                * 外部dtd：将约束的规则定义在外部的dtd文件中\n                    * 本地：&lt;!DOCTYPE 根标签名 SYSTEM &quot;dtd文件的位置&quot;&gt;\n                    * 网络：&lt;!DOCTYPE 根标签名 PUBLIC &quot;dtd文件名字&quot; &quot;dtd文件的位置URL&quot;&gt;\n\n\n        * Schema:\n            * 引入：\n                1.填写xml文档的根元素\n                2.引入xsi前缀.  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n                3.引入xsd文件命名空间.  xsi:schemaLocation=&quot;http://www.itcast.cn/xml  student.xsd&quot;\n                4.为每一个xsd约束声明一个前缀,作为标识  xmlns=&quot;http://www.itcast.cn/xml&quot; \n\n            &lt;students   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n                xmlns=&quot;http://www.itcast.cn/xml&quot;\n                xsi:schemaLocation=&quot;http://www.itcast.cn/xml  student.xsd&quot;&gt;\n</code></pre><p>​    </p>\n<pre><code>3. 解析：操作xml文档，将文档中的数据读取到内存中\n    * 操作xml文档\n        1. 解析(读取)：将文档中的数据读取到内存中\n        2. 写入：将内存中的数据保存到xml文档中。持久化的存储\n\n    * 解析xml的方式：\n        1. DOM(一般用于服务器端)：将标记语言文档一次性加载进内存，在内存中形成一棵dom树\n            * 优点：操作方便，可以对文档进行CRUD的所有操作\n            * 缺点：占内存\n        2. SAX(一般用于客户端)：逐行读取，基于事件驱动的。\n            * 优点：不占内存。\n            * 缺点：只能读取，不能增删改\n</code></pre><p>​        </p>\n<pre><code>    * xml常见的解析器：\n        1. JAXP：sun公司提供的解析器，支持dom和sax两种思想\n        2. DOM4J：一款非常优秀的解析器\n        3. Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n        4. PULL：Android操作系统内置的解析器，sax方式的。\n\n\n    * Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n        * 快速入门：\n            * 步骤：\n                1. 导入jar包\n                2. 获取Document对象\n                3. 获取对应的标签Element对象\n                4. 获取数据\n\n        * 代码：\n             //2.1获取student.xml的path\n            String path = JsoupDemo1.class.getClassLoader().getResource(&quot;student.xml&quot;).getPath();\n            //2.2解析xml文档，加载文档进内存，获取dom树---&gt;Document\n            Document document = Jsoup.parse(new File(path), &quot;utf-8&quot;);\n            //3.获取元素对象 Element\n            Elements elements = document.getElementsByTag(&quot;name&quot;);\n\n            System.out.println(elements.size());\n            //3.1获取第一个name的Element对象\n            Element element = elements.get(0);\n            //3.2获取数据\n            String name = element.text();\n            System.out.println(name);\n\n    * 对象的使用：\n        1. Jsoup：工具类，可以解析html或xml文档，返回Document\n            * parse：解析html或xml文档，返回Document\n                * parse​(File in, String charsetName)：解析xml或html文件的。\n                * parse​(String html)：解析xml或html字符串\n                * parse​(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象\n        2. Document：文档对象。代表内存中的dom树\n            * 获取Element对象\n                * getElementById​(String id)：根据id属性值获取唯一的element对象\n                * getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n                * getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n                * getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n        3. Elements：元素Element对象的集合。可以当做 ArrayList&lt;Element&gt;来使用\n        4. Element：元素对象\n            1. 获取子元素对象\n                * getElementById​(String id)：根据id属性值获取唯一的element对象\n                * getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n                * getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n                * getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n\n            2. 获取属性值\n                * String attr(String key)：根据属性名称获取属性值\n            3. 获取文本内容\n                * String text():获取文本内容\n                * String html():获取标签体的所有内容(包括子标签的字符串内容)\n        5. Node：节点对象\n            * 是Document和Element的父类\n</code></pre><p>​            </p>\n<pre><code>    * 快捷查询方式：\n        1. selector:选择器\n            * 使用的方法：Elements    select​(String cssQuery)\n                * 语法：参考Selector类中定义的语法\n        2. XPath：XPath即为XML路径语言，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言\n            * 使用Jsoup的Xpath需要额外导入jar包。\n            * 查询w3cshool参考手册，使用xpath的语法完成查询\n            * 代码：\n                //1.获取student.xml的path\n                String path = JsoupDemo6.class.getClassLoader().getResource(&quot;student.xml&quot;).getPath();\n                //2.获取Document对象\n                Document document = Jsoup.parse(new File(path), &quot;utf-8&quot;);\n\n                //3.根据document对象，创建JXDocument对象\n                JXDocument jxDocument = new JXDocument(document);\n\n                //4.结合xpath语法查询\n                //4.1查询所有student标签\n                List&lt;JXNode&gt; jxNodes = jxDocument.selN(&quot;//student&quot;);\n                for (JXNode jxNode : jxNodes) {\n                    System.out.println(jxNode);\n                }\n\n                System.out.println(&quot;--------------------&quot;);\n\n                //4.2查询所有student标签下的name标签\n                List&lt;JXNode&gt; jxNodes2 = jxDocument.selN(&quot;//student/name&quot;);\n                for (JXNode jxNode : jxNodes2) {\n                    System.out.println(jxNode);\n                }\n\n                System.out.println(&quot;--------------------&quot;);\n\n                //4.3查询student标签下带有id属性的name标签\n                List&lt;JXNode&gt; jxNodes3 = jxDocument.selN(&quot;//student/name[@id]&quot;);\n                for (JXNode jxNode : jxNodes3) {\n                    System.out.println(jxNode);\n                }\n                System.out.println(&quot;--------------------&quot;);\n                //4.4查询student标签下带有id属性的name标签 并且id属性值为itcast\n\n                List&lt;JXNode&gt; jxNodes4 = jxDocument.selN(&quot;//student/name[@id=&#39;itcast&#39;]&quot;);\n                for (JXNode jxNode : jxNodes4) {\n                    System.out.println(jxNode);\n                }\n</code></pre>', '2020-08-09 13:29:00', 1, 0, '2019-07-25 23:21:01', '徐杨');
INSERT INTO `article` VALUES (24, '综合练习笔记', '# 今日内容\n\n	1. 综合练习\n		1. 简单功能\n			1. 列表查询\n			2. 登录\n			3. 添加\n			4. 删除\n			5. 修改\n			\n		2. 复杂功能\n			1. 删除选中\n			2. 分页查询\n				* 好处：\n					1. 减轻服务器内存的开销\n					2. 提升用户体验\n			3. 复杂条件查询\n\n\n\n\n## 2. 登录\n\n	1. 调整页面，加入验证码功能\n	2. 代码实现\n\n', '<h1 id=\"h1-u4ECAu65E5u5185u5BB9\"><a name=\"今日内容\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>今日内容</h1><pre><code>1. 综合练习\n    1. 简单功能\n        1. 列表查询\n        2. 登录\n        3. 添加\n        4. 删除\n        5. 修改\n\n    2. 复杂功能\n        1. 删除选中\n        2. 分页查询\n            * 好处：\n                1. 减轻服务器内存的开销\n                2. 提升用户体验\n        3. 复杂条件查询\n</code></pre><h2 id=\"h2-2-\"><a name=\"2. 登录\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2. 登录</h2><pre><code>1. 调整页面，加入验证码功能\n2. 代码实现\n</code></pre>', '2020-08-09 13:29:00', 1, 0, '2020-07-25 23:21:42', '徐杨');
INSERT INTO `article` VALUES (27, 'bootstrap', '# 今日内容\n	1. Bootstrap\n## Bootstrap	：\n\n	1. 概念： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。\n		* 框架:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。\n		* 好处：\n			1. 定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。\n			2. 响应式布局。\n				* 同一套页面可以兼容不同分辨率的设备。\n\n\n	2. 快速入门\n		1. 下载Bootstrap\n		2. 在项目中将这三个文件夹复制\n		3. 创建html页面，引入必要的资源文件\n\n\n		<!DOCTYPE html>\n		<html lang=\"zh-CN\">\n		<head>\n		    <meta charset=\"utf-8\">\n		    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n		    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n		    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->\n		    <title>Bootstrap HelloWorld</title>\n		\n		    <!-- Bootstrap -->\n		    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\n\n\n​		\n\n		    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->\n		    <script src=\"js/jquery-3.2.1.min.js\"></script>\n		    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->\n		    <script src=\"js/bootstrap.min.js\"></script>\n		</head>\n		<body>\n		<h1>你好，世界！</h1>\n		\n		</body>\n		</html>\n\n## 响应式布局\n\n	* 同一套页面可以兼容不同分辨率的设备。\n	* 实现：依赖于栅格系统：将一行平均分成12个格子，可以指定元素占几个格子\n	* 步骤：\n		1. 定义容器。相当于之前的table、\n			* 容器分类：\n				1. container：两边留白\n				2. container-fluid：每一种设备都是100%宽度\n		2. 定义行。相当于之前的tr   样式：row\n		3. 定义元素。指定该元素在不同的设备上，所占的格子数目。样式：col-设备代号-格子数目\n			* 设备代号：\n				1. xs：超小屏幕 手机 (<768px)：col-xs-12\n				2. sm：小屏幕 平板 (≥768px)\n				3. md：中等屏幕 桌面显示器 (≥992px)\n				4. lg：大屏幕 大桌面显示器 (≥1200px)\n	\n		* 注意：\n			1. 一行中如果格子数目超过12，则超出部分自动换行。\n			2. 栅格类属性可以向上兼容。栅格类适用于与屏幕宽度大于或等于分界点大小的设备。\n			3. 如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素占满一整行。\n\n## CSS样式和JS插件\n\n	1. 全局CSS样式：\n		* 按钮：class=\"btn btn-default\"\n		* 图片：\n			*  class=\"img-responsive\"：图片在任意尺寸都占100%\n			*  图片形状\n				*  <img src=\"...\" alt=\"...\" class=\"img-rounded\">：方形\n				*  <img src=\"...\" alt=\"...\" class=\"img-circle\"> ： 圆形\n				*  <img src=\"...\" alt=\"...\" class=\"img-thumbnail\"> ：相框\n		* 表格\n			* table\n			* table-bordered\n			* table-hover\n		* 表单\n			* 给表单项添加：class=\"form-control\" \n	2. 组件：\n		* 导航条\n		* 分页条\n	3. 插件：\n		* 轮播图\n\n## 案例\n\n	<!DOCTYPE html>\n	<html lang=\"zh-CN\">\n	<head>\n	    <meta charset=\"utf-8\">\n	    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n	    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n	    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->\n	    <title>Bootstrap HelloWorld</title>\n	\n	    <!-- Bootstrap -->\n	    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\n\n\n​	\n\n	    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->\n	    <script src=\"js/jquery-3.2.1.min.js\"></script>\n	    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->\n	    <script src=\"js/bootstrap.min.js\"></script>\n	    <style>\n	        .paddtop{\n	            padding-top: 10px;\n	        }\n	        .search-btn{\n	            float: left;\n	            border:1px solid #ffc900;\n	            width: 90px;\n	            height: 35px;\n	            background-color:#ffc900 ;\n	            text-align: center;\n	            line-height: 35px;\n	            margin-top: 15px;\n	        }\n	\n	        .search-input{\n	            float: left;\n	            border:2px solid #ffc900;\n	            width: 400px;\n	            height: 35px;\n	            padding-left: 5px;\n	            margin-top: 15px;\n	        }\n	        .jx{\n	            border-bottom: 2px solid #ffc900;\n	            padding: 5px;\n	        }\n	        .company{\n	            height: 40px;\n	            background-color: #ffc900;\n	            text-align: center;\n	            line-height:40px ;\n	            font-size: 8px;\n	        }\n	    </style>\n	</head>\n	<body>\n	\n	   <!-- 1.页眉部分-->\n	   <header class=\"container-fluid\">\n	       <div class=\"row\">\n	           <img src=\"img/top_banner.jpg\" class=\"img-responsive\">\n	       </div>\n	       <div class=\"row paddtop\">\n	           <div class=\"col-md-3\">\n	               <img src=\"img/logo.jpg\" class=\"img-responsive\">\n	           </div>\n	           <div class=\"col-md-5\">\n	               <input class=\"search-input\" placeholder=\"请输入线路名称\">\n	               <a class=\"search-btn\" href=\"#\">搜索</a>\n	           </div>\n	           <div class=\"col-md-4\">\n	               <img src=\"img/hotel_tel.png\" class=\"img-responsive\">\n	           </div>\n	\n	       </div>\n	       <!--导航栏-->\n	       <div class=\"row\">\n	           <nav class=\"navbar navbar-default\">\n	               <div class=\"container-fluid\">\n	                   <!-- Brand and toggle get grouped for better mobile display -->\n	                   <div class=\"navbar-header\">\n	                       <!-- 定义汉堡按钮 -->\n	                       <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n	                           <span class=\"sr-only\">Toggle navigation</span>\n	                           <span class=\"icon-bar\"></span>\n	                           <span class=\"icon-bar\"></span>\n	                           <span class=\"icon-bar\"></span>\n	                       </button>\n	                       <a class=\"navbar-brand\" href=\"#\">首页</a>\n	                   </div>\n	\n	                   <!-- Collect the nav links, forms, and other content for toggling -->\n	                   <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n	                       <ul class=\"nav navbar-nav\">\n	                           <li class=\"active\"><a href=\"#\">Link <span class=\"sr-only\">(current)</span></a></li>\n	                           <li><a href=\"#\">Link</a></li>\n	                           <li><a href=\"#\">Link</a></li>\n	                           <li><a href=\"#\">Link</a></li>\n	                           <li><a href=\"#\">Link</a></li>\n	                           <li><a href=\"#\">Link</a></li>\n	\n	                       </ul>\n	                   </div><!-- /.navbar-collapse -->\n	               </div><!-- /.container-fluid -->\n	           </nav>\n	\n	       </div>\n	\n	       <!--轮播图-->\n	       <div class=\"row\">\n	           <div id=\"carousel-example-generic\" class=\"carousel slide\" data-ride=\"carousel\">\n	               <!-- Indicators -->\n	               <ol class=\"carousel-indicators\">\n	                   <li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"></li>\n	                   <li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"></li>\n	                   <li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"></li>\n	               </ol>\n	\n	               <!-- Wrapper for slides -->\n	               <div class=\"carousel-inner\" role=\"listbox\">\n	                   <div class=\"item active\">\n	                       <img src=\"img/banner_1.jpg\" alt=\"...\">\n	                   </div>\n	                   <div class=\"item\">\n	                       <img src=\"img/banner_2.jpg\" alt=\"...\">\n	                   </div>\n	                   <div class=\"item\">\n	                       <img src=\"img/banner_3.jpg\" alt=\"...\">\n	                   </div>\n	\n	               </div>\n	\n	               <!-- Controls -->\n	               <a class=\"left carousel-control\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"prev\">\n	                   <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\n	                   <span class=\"sr-only\">Previous</span>\n	               </a>\n	               <a class=\"right carousel-control\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"next\">\n	                   <span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\n	                   <span class=\"sr-only\">Next</span>\n	               </a>\n	           </div>\n\n\n​	\n​	\n\n	       </div>\n	\n	   </header>\n	   <!-- 2.主体部分-->\n	   <div class=\"container\">\n	        <div class=\"row jx\">\n	            <img src=\"img/icon_5.jpg\">\n	            <span>黑马精选</span>\n	        </div>\n	\n	       <div class=\"row paddtop\">\n	           <div class=\"col-md-3\">\n	                <div class=\"thumbnail\">\n	                    <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                    <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                    <font color=\"red\">&yen; 699</font>\n	                </div>\n	           </div>\n	           <div class=\"col-md-3\">\n	               <div class=\"thumbnail\">\n	                   <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                   <font color=\"red\">&yen; 699</font>\n	               </div>\n	\n	           </div>\n	           <div class=\"col-md-3\">\n	\n	               <div class=\"thumbnail\">\n	                   <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                   <font color=\"red\">&yen; 699</font>\n	               </div>\n	           </div>\n	           <div class=\"col-md-3\">\n	\n	               <div class=\"thumbnail\">\n	                   <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                   <font color=\"red\">&yen; 699</font>\n	               </div>\n	           </div>\n\n\n​	\n\n	       </div>\n	       <div class=\"row jx\">\n	           <img src=\"img/icon_6.jpg\">\n	           <span>国内游</span>\n	       </div>\n	       <div class=\"row paddtop\">\n	           <div class=\"col-md-4\">\n	               <img src=\"img/guonei_1.jpg\">\n	           </div>\n	           <div class=\"col-md-8\">\n	               <div class=\"row\">\n	                   <div class=\"col-md-4\">\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	                   </div>\n	                   <div class=\"col-md-4\">\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	\n	                   </div>\n	                   <div class=\"col-md-4\">\n	\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	                   </div>\n	\n	               </div>\n	               <div class=\"row\">\n	                   <div class=\"col-md-4\">\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	                   </div>\n	                   <div class=\"col-md-4\">\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	\n	                   </div>\n	                   <div class=\"col-md-4\">\n	\n	                       <div class=\"thumbnail\">\n	                           <img src=\"img/jiangxuan_3.jpg\" alt=\"\">\n	                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n	                           <font color=\"red\">&yen; 699</font>\n	                       </div>\n	                   </div>\n\n\n​	\n\n	               </div>\n	\n	           </div>\n	\n	       </div>\n	   </div>\n	   <!-- 3.页脚部分-->\n	   <footer class=\"container-fluid\">\n	       <div class=\"row\">\n	           <img src=\"img/footer_service.png\" class=\"img-responsive\">\n	       </div>\n	       <div class=\"row company\">\n	           江苏传智播客教育科技股份有限公司 版权所有Copyright 2006-2018, All Rights Reserved 苏ICP备16007882\n	       </div>\n	\n	   </footer>\n\n\n​	\n\n	</body>\n	</html>', '<h1 id=\"h1-u4ECAu65E5u5185u5BB9\"><a name=\"今日内容\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>今日内容</h1><pre><code>1. Bootstrap\n</code></pre><h2 id=\"h2-bootstrap-\"><a name=\"Bootstrap    ：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Bootstrap    ：</h2><pre><code>1. 概念： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。\n    * 框架:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。\n    * 好处：\n        1. 定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。\n        2. 响应式布局。\n            * 同一套页面可以兼容不同分辨率的设备。\n\n\n2. 快速入门\n    1. 下载Bootstrap\n    2. 在项目中将这三个文件夹复制\n    3. 创建html页面，引入必要的资源文件\n\n\n    &lt;!DOCTYPE html&gt;\n    &lt;html lang=&quot;zh-CN&quot;&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot;&gt;\n        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n        &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\n        &lt;title&gt;Bootstrap HelloWorld&lt;/title&gt;\n\n        &lt;!-- Bootstrap --&gt;\n        &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;\n</code></pre><p>​        </p>\n<pre><code>        &lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;\n        &lt;script src=&quot;js/jquery-3.2.1.min.js&quot;&gt;&lt;/script&gt;\n        &lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;\n        &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;h1&gt;你好，世界！&lt;/h1&gt;\n\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre><h2 id=\"h2-u54CDu5E94u5F0Fu5E03u5C40\"><a name=\"响应式布局\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>响应式布局</h2><pre><code>* 同一套页面可以兼容不同分辨率的设备。\n* 实现：依赖于栅格系统：将一行平均分成12个格子，可以指定元素占几个格子\n* 步骤：\n    1. 定义容器。相当于之前的table、\n        * 容器分类：\n            1. container：两边留白\n            2. container-fluid：每一种设备都是100%宽度\n    2. 定义行。相当于之前的tr   样式：row\n    3. 定义元素。指定该元素在不同的设备上，所占的格子数目。样式：col-设备代号-格子数目\n        * 设备代号：\n            1. xs：超小屏幕 手机 (&lt;768px)：col-xs-12\n            2. sm：小屏幕 平板 (≥768px)\n            3. md：中等屏幕 桌面显示器 (≥992px)\n            4. lg：大屏幕 大桌面显示器 (≥1200px)\n\n    * 注意：\n        1. 一行中如果格子数目超过12，则超出部分自动换行。\n        2. 栅格类属性可以向上兼容。栅格类适用于与屏幕宽度大于或等于分界点大小的设备。\n        3. 如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素占满一整行。\n</code></pre><h2 id=\"h2-css-js-\"><a name=\"CSS样式和JS插件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>CSS样式和JS插件</h2><pre><code>1. 全局CSS样式：\n    * 按钮：class=&quot;btn btn-default&quot;\n    * 图片：\n        *  class=&quot;img-responsive&quot;：图片在任意尺寸都占100%\n        *  图片形状\n            *  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-rounded&quot;&gt;：方形\n            *  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-circle&quot;&gt; ： 圆形\n            *  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-thumbnail&quot;&gt; ：相框\n    * 表格\n        * table\n        * table-bordered\n        * table-hover\n    * 表单\n        * 给表单项添加：class=&quot;form-control&quot; \n2. 组件：\n    * 导航条\n    * 分页条\n3. 插件：\n    * 轮播图\n</code></pre><h2 id=\"h2-u6848u4F8B\"><a name=\"案例\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>案例</h2><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;zh-CN&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n    &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\n    &lt;title&gt;Bootstrap HelloWorld&lt;/title&gt;\n\n    &lt;!-- Bootstrap --&gt;\n    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;\n</code></pre><p>​    </p>\n<pre><code>    &lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;\n    &lt;script src=&quot;js/jquery-3.2.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;\n    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n    &lt;style&gt;\n        .paddtop{\n            padding-top: 10px;\n        }\n        .search-btn{\n            float: left;\n            border:1px solid #ffc900;\n            width: 90px;\n            height: 35px;\n            background-color:#ffc900 ;\n            text-align: center;\n            line-height: 35px;\n            margin-top: 15px;\n        }\n\n        .search-input{\n            float: left;\n            border:2px solid #ffc900;\n            width: 400px;\n            height: 35px;\n            padding-left: 5px;\n            margin-top: 15px;\n        }\n        .jx{\n            border-bottom: 2px solid #ffc900;\n            padding: 5px;\n        }\n        .company{\n            height: 40px;\n            background-color: #ffc900;\n            text-align: center;\n            line-height:40px ;\n            font-size: 8px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n   &lt;!-- 1.页眉部分--&gt;\n   &lt;header class=&quot;container-fluid&quot;&gt;\n       &lt;div class=&quot;row&quot;&gt;\n           &lt;img src=&quot;img/top_banner.jpg&quot; class=&quot;img-responsive&quot;&gt;\n       &lt;/div&gt;\n       &lt;div class=&quot;row paddtop&quot;&gt;\n           &lt;div class=&quot;col-md-3&quot;&gt;\n               &lt;img src=&quot;img/logo.jpg&quot; class=&quot;img-responsive&quot;&gt;\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-5&quot;&gt;\n               &lt;input class=&quot;search-input&quot; placeholder=&quot;请输入线路名称&quot;&gt;\n               &lt;a class=&quot;search-btn&quot; href=&quot;#&quot;&gt;搜索&lt;/a&gt;\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-4&quot;&gt;\n               &lt;img src=&quot;img/hotel_tel.png&quot; class=&quot;img-responsive&quot;&gt;\n           &lt;/div&gt;\n\n       &lt;/div&gt;\n       &lt;!--导航栏--&gt;\n       &lt;div class=&quot;row&quot;&gt;\n           &lt;nav class=&quot;navbar navbar-default&quot;&gt;\n               &lt;div class=&quot;container-fluid&quot;&gt;\n                   &lt;!-- Brand and toggle get grouped for better mobile display --&gt;\n                   &lt;div class=&quot;navbar-header&quot;&gt;\n                       &lt;!-- 定义汉堡按钮 --&gt;\n                       &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;\n                           &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;\n                           &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\n                           &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\n                           &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;\n                       &lt;/button&gt;\n                       &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;首页&lt;/a&gt;\n                   &lt;/div&gt;\n\n                   &lt;!-- Collect the nav links, forms, and other content for toggling --&gt;\n                   &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;\n                       &lt;ul class=&quot;nav navbar-nav&quot;&gt;\n                           &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Link &lt;span class=&quot;sr-only&quot;&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n                           &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;\n                           &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;\n                           &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;\n                           &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;\n                           &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;\n\n                       &lt;/ul&gt;\n                   &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;\n               &lt;/div&gt;&lt;!-- /.container-fluid --&gt;\n           &lt;/nav&gt;\n\n       &lt;/div&gt;\n\n       &lt;!--轮播图--&gt;\n       &lt;div class=&quot;row&quot;&gt;\n           &lt;div id=&quot;carousel-example-generic&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt;\n               &lt;!-- Indicators --&gt;\n               &lt;ol class=&quot;carousel-indicators&quot;&gt;\n                   &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;/li&gt;\n                   &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;1&quot;&gt;&lt;/li&gt;\n                   &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;2&quot;&gt;&lt;/li&gt;\n               &lt;/ol&gt;\n\n               &lt;!-- Wrapper for slides --&gt;\n               &lt;div class=&quot;carousel-inner&quot; role=&quot;listbox&quot;&gt;\n                   &lt;div class=&quot;item active&quot;&gt;\n                       &lt;img src=&quot;img/banner_1.jpg&quot; alt=&quot;...&quot;&gt;\n                   &lt;/div&gt;\n                   &lt;div class=&quot;item&quot;&gt;\n                       &lt;img src=&quot;img/banner_2.jpg&quot; alt=&quot;...&quot;&gt;\n                   &lt;/div&gt;\n                   &lt;div class=&quot;item&quot;&gt;\n                       &lt;img src=&quot;img/banner_3.jpg&quot; alt=&quot;...&quot;&gt;\n                   &lt;/div&gt;\n\n               &lt;/div&gt;\n\n               &lt;!-- Controls --&gt;\n               &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;prev&quot;&gt;\n                   &lt;span class=&quot;glyphicon glyphicon-chevron-left&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;\n                   &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;/span&gt;\n               &lt;/a&gt;\n               &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;next&quot;&gt;\n                   &lt;span class=&quot;glyphicon glyphicon-chevron-right&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;\n                   &lt;span class=&quot;sr-only&quot;&gt;Next&lt;/span&gt;\n               &lt;/a&gt;\n           &lt;/div&gt;\n</code></pre><p>​<br>​    </p>\n<pre><code>       &lt;/div&gt;\n\n   &lt;/header&gt;\n   &lt;!-- 2.主体部分--&gt;\n   &lt;div class=&quot;container&quot;&gt;\n        &lt;div class=&quot;row jx&quot;&gt;\n            &lt;img src=&quot;img/icon_5.jpg&quot;&gt;\n            &lt;span&gt;黑马精选&lt;/span&gt;\n        &lt;/div&gt;\n\n       &lt;div class=&quot;row paddtop&quot;&gt;\n           &lt;div class=&quot;col-md-3&quot;&gt;\n                &lt;div class=&quot;thumbnail&quot;&gt;\n                    &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                    &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                    &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-3&quot;&gt;\n               &lt;div class=&quot;thumbnail&quot;&gt;\n                   &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                   &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                   &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n               &lt;/div&gt;\n\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-3&quot;&gt;\n\n               &lt;div class=&quot;thumbnail&quot;&gt;\n                   &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                   &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                   &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n               &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-3&quot;&gt;\n\n               &lt;div class=&quot;thumbnail&quot;&gt;\n                   &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                   &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                   &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n               &lt;/div&gt;\n           &lt;/div&gt;\n</code></pre><p>​    </p>\n<pre><code>       &lt;/div&gt;\n       &lt;div class=&quot;row jx&quot;&gt;\n           &lt;img src=&quot;img/icon_6.jpg&quot;&gt;\n           &lt;span&gt;国内游&lt;/span&gt;\n       &lt;/div&gt;\n       &lt;div class=&quot;row paddtop&quot;&gt;\n           &lt;div class=&quot;col-md-4&quot;&gt;\n               &lt;img src=&quot;img/guonei_1.jpg&quot;&gt;\n           &lt;/div&gt;\n           &lt;div class=&quot;col-md-8&quot;&gt;\n               &lt;div class=&quot;row&quot;&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n                   &lt;/div&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n\n                   &lt;/div&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n                   &lt;/div&gt;\n\n               &lt;/div&gt;\n               &lt;div class=&quot;row&quot;&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n                   &lt;/div&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n\n                   &lt;/div&gt;\n                   &lt;div class=&quot;col-md-4&quot;&gt;\n\n                       &lt;div class=&quot;thumbnail&quot;&gt;\n                           &lt;img src=&quot;img/jiangxuan_3.jpg&quot; alt=&quot;&quot;&gt;\n                           &lt;p&gt;上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)&lt;/p&gt;\n                           &lt;font color=&quot;red&quot;&gt;&amp;yen; 699&lt;/font&gt;\n                       &lt;/div&gt;\n                   &lt;/div&gt;\n</code></pre><p>​    </p>\n<pre><code>               &lt;/div&gt;\n\n           &lt;/div&gt;\n\n       &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;!-- 3.页脚部分--&gt;\n   &lt;footer class=&quot;container-fluid&quot;&gt;\n       &lt;div class=&quot;row&quot;&gt;\n           &lt;img src=&quot;img/footer_service.png&quot; class=&quot;img-responsive&quot;&gt;\n       &lt;/div&gt;\n       &lt;div class=&quot;row company&quot;&gt;\n           江苏传智播客教育科技股份有限公司 版权所有Copyright 2006-2018, All Rights Reserved 苏ICP备16007882\n       &lt;/div&gt;\n\n   &lt;/footer&gt;\n</code></pre><p>​    </p>\n<pre><code>&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>', '2020-08-03 11:58:01', 7, 1, '2020-07-25 23:26:01', 'xy徐sad');
INSERT INTO `article` VALUES (31, 'sczx', 'zxczxczx', '<p>zxczxczx</p>\n', '2020-08-03 12:03:18', 1, 0, '2020-07-26 14:44:43', '徐杨');
INSERT INTO `article` VALUES (32, '萨达', '撒旦撒旦', '<p>撒旦撒旦</p>\n', '2020-08-03 12:03:51', 1, 0, '2020-07-27 21:11:42', '大苏打');
INSERT INTO `article` VALUES (39, 'sdad', 'sadsad', '<p>sadsad</p>\n', '2020-07-28 18:42:25', 8, 0, '2020-07-28 18:42:25', 'dasdas');
INSERT INTO `article` VALUES (40, '我是最新的文章', '## 今日内容\n\n	1. AJAX：\n	2. JSON\n\n\n\n\n\n# AJAX：\n\n	1. 概念： ASynchronous JavaScript And XML	             异步的JavaScript 和 XML\n		1. 异步和同步：客户端和服务器端相互通信的基础上\n			* 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。\n			* 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。\n	\n			Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] \n			通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n			传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。\n	\n			提升用户的体验\n	\n	2. 实现方式：\n		1. 原生的JS实现方式（了解）\n					 //1.创建核心对象\n		            var xmlhttp;\n		            if (window.XMLHttpRequest)\n		            {// code for IE7+, Firefox, Chrome, Opera, Safari\n		                xmlhttp=new XMLHttpRequest();\n		            }\n		            else\n		            {// code for IE6, IE5\n		                xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n		            }\n		\n		            //2. 建立连接\n		            /*\n		                参数：\n		                    1. 请求方式：GET、POST\n		                        * get方式，请求参数在URL后边拼接。send方法为空参\n		                        * post方式，请求参数在send方法中定义\n		                    2. 请求的URL：\n		                    3. 同步或异步请求：true（异步）或 false（同步）\n		\n		             */\n		            xmlhttp.open(\"GET\",\"ajaxServlet?username=tom\",true);\n		\n		            //3.发送请求\n		            xmlhttp.send();\n		\n		            //4.接受并处理来自服务器的响应结果\n		            //获取方式 ：xmlhttp.responseText\n		            //什么时候获取？当服务器响应成功后再获取\n		\n		            //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。\n		            xmlhttp.onreadystatechange=function()\n		            {\n		                //判断readyState就绪状态是否为4，判断status响应状态码是否为200\n		                if (xmlhttp.readyState==4 && xmlhttp.status==200)\n		                {\n		                   //获取服务器的响应结果\n		                    var responseText = xmlhttp.responseText;\n		                    alert(responseText);\n		                }\n		            }\n		2. JQeury实现方式\n			1. $.ajax()\n				* 语法：$.ajax({键值对});\n				 //使用$.ajax()发送异步请求\n		            $.ajax({\n		                url:\"ajaxServlet1111\" , // 请求路径\n		                type:\"POST\" , //请求方式\n		                //data: \"username=jack&age=23\",//请求参数\n		                data:{\"username\":\"jack\",\"age\":23},\n		                success:function (data) {\n		                    alert(data);\n		                },//响应成功后的回调函数\n		                error:function () {\n		                    alert(\"出错啦...\")\n		                },//表示如果请求响应出现错误，会执行的回调函数\n		\n		                dataType:\"text\"//设置接受到的响应数据的格式\n		            });\n			2. $.get()：发送get请求\n				* 语法：$.get(url, [data], [callback], [type])\n					* 参数：\n						* url：请求路径\n						* data：请求参数\n						* callback：回调函数\n						* type：响应结果的类型\n	\n			3. $.post()：发送post请求\n				* 语法：$.post(url, [data], [callback], [type])\n					* 参数：\n						* url：请求路径\n						* data：请求参数\n						* callback：回调函数\n						* type：响应结果的类型\n\n\n\n# JSON：\n\n	1. 概念： JavaScript Object Notation		JavaScript对象表示法\n		Person p = new Person();\n		p.setName(\"张三\");\n		p.setAge(23);\n		p.setGender(\"男\");\n	\n		var p = {\"name\":\"张三\",\"age\":23,\"gender\":\"男\"};\n	\n		* json现在多用于存储和交换文本信息的语法\n		* 进行数据的传输\n		* JSON 比 XML 更小、更快，更易解析。\n	\n	2. 语法：\n		1. 基本规则\n			* 数据在名称/值对中：json数据是由键值对构成的\n				* 键用引号(单双都行)引起来，也可以不使用引号\n				* 值得取值类型：\n					1. 数字（整数或浮点数）\n					2. 字符串（在双引号中）\n					3. 逻辑值（true 或 false）\n					4. 数组（在方括号中）	{\"persons\":[{},{}]}\n					5. 对象（在花括号中） {\"address\":{\"province\"：\"陕西\"....}}\n					6. null\n			* 数据由逗号分隔：多个键值对由逗号分隔\n			* 花括号保存对象：使用{}定义json 格式\n			* 方括号保存数组：[]\n		2. 获取数据:\n			1. json对象.键名\n			2. json对象[\"键名\"]\n			3. 数组对象[索引]\n			4. 遍历\n					 //1.定义基本格式\n			        var person = {\"name\": \"张三\", age: 23, \'gender\': true};\n			\n			        var ps = [{\"name\": \"张三\", \"age\": 23, \"gender\": true},\n			            {\"name\": \"李四\", \"age\": 24, \"gender\": true},\n			            {\"name\": \"王五\", \"age\": 25, \"gender\": false}];\n\n\n​			\n​			\n​			\n\n			        //获取person对象中所有的键和值\n			        //for in 循环\n			       /* for(var key in person){\n			            //这样的方式获取不行。因为相当于  person.\"name\"\n			            //alert(key + \":\" + person.key);\n			            alert(key+\":\"+person[key]);\n			        }*/\n			\n			       //获取ps中的所有值\n			        for (var i = 0; i < ps.length; i++) {\n			            var p = ps[i];\n			            for(var key in p){\n			                alert(key+\":\"+p[key]);\n			            }\n			        }\n\n\n	3. JSON数据和Java对象的相互转换\n	\n		* JSON解析器：\n			* 常见的解析器：Jsonlib，Gson，fastjson，jackson\n		\n		1. JSON转为Java对象\n			1. 导入jackson的相关jar包\n			2. 创建Jackson核心对象 ObjectMapper\n			3. 调用ObjectMapper的相关方法进行转换\n				1. readValue(json字符串数据,Class)\n		2. Java对象转为JSON\n			1. 使用步骤：\n				1. 导入jackson的相关jar包\n				2. 创建Jackson核心对象 ObjectMapper\n				3. 调用ObjectMapper的相关方法进行转换\n					1. 转换方法：\n						* writeValue(参数1，obj):\n		                    参数1：\n		                        File：将obj对象转换为JSON字符串，并保存到指定的文件中\n		                        Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中\n		                        OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中\n		                * writeValueAsString(obj):将对象转为json字符串\n	\n					2. 注解：\n						1. @JsonIgnore：排除属性。\n						2. @JsonFormat：属性值的格式化\n							* @JsonFormat(pattern = \"yyyy-MM-dd\")\n	\n					3. 复杂java对象转换\n						1. List：数组\n						2. Map：对象格式一致\n\n\n# 案例：\n\n	* 校验用户名是否存在\n		1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：\n			1. $.get(type):将最后一个参数type指定为\"json\"\n			2. 在服务器端设置MIME类型\n				response.setContentType(\"application/json;charset=utf-8\");\n\n\n\n\n\n', '<h2 id=\"h2-u4ECAu65E5u5185u5BB9\"><a name=\"今日内容\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>今日内容</h2><pre><code>1. AJAX：\n2. JSON\n</code></pre><h1 id=\"h1-ajax-\"><a name=\"AJAX：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>AJAX：</h1><pre><code>1. 概念： ASynchronous JavaScript And XML                 异步的JavaScript 和 XML\n    1. 异步和同步：客户端和服务器端相互通信的基础上\n        * 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。\n        * 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。\n\n        Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] \n        通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n        传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。\n\n        提升用户的体验\n\n2. 实现方式：\n    1. 原生的JS实现方式（了解）\n                 //1.创建核心对象\n                var xmlhttp;\n                if (window.XMLHttpRequest)\n                {// code for IE7+, Firefox, Chrome, Opera, Safari\n                    xmlhttp=new XMLHttpRequest();\n                }\n                else\n                {// code for IE6, IE5\n                    xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);\n                }\n\n                //2. 建立连接\n                /*\n                    参数：\n                        1. 请求方式：GET、POST\n                            * get方式，请求参数在URL后边拼接。send方法为空参\n                            * post方式，请求参数在send方法中定义\n                        2. 请求的URL：\n                        3. 同步或异步请求：true（异步）或 false（同步）\n\n                 */\n                xmlhttp.open(&quot;GET&quot;,&quot;ajaxServlet?username=tom&quot;,true);\n\n                //3.发送请求\n                xmlhttp.send();\n\n                //4.接受并处理来自服务器的响应结果\n                //获取方式 ：xmlhttp.responseText\n                //什么时候获取？当服务器响应成功后再获取\n\n                //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。\n                xmlhttp.onreadystatechange=function()\n                {\n                    //判断readyState就绪状态是否为4，判断status响应状态码是否为200\n                    if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)\n                    {\n                       //获取服务器的响应结果\n                        var responseText = xmlhttp.responseText;\n                        alert(responseText);\n                    }\n                }\n    2. JQeury实现方式\n        1. $.ajax()\n            * 语法：$.ajax({键值对});\n             //使用$.ajax()发送异步请求\n                $.ajax({\n                    url:&quot;ajaxServlet1111&quot; , // 请求路径\n                    type:&quot;POST&quot; , //请求方式\n                    //data: &quot;username=jack&amp;age=23&quot;,//请求参数\n                    data:{&quot;username&quot;:&quot;jack&quot;,&quot;age&quot;:23},\n                    success:function (data) {\n                        alert(data);\n                    },//响应成功后的回调函数\n                    error:function () {\n                        alert(&quot;出错啦...&quot;)\n                    },//表示如果请求响应出现错误，会执行的回调函数\n\n                    dataType:&quot;text&quot;//设置接受到的响应数据的格式\n                });\n        2. $.get()：发送get请求\n            * 语法：$.get(url, [data], [callback], [type])\n                * 参数：\n                    * url：请求路径\n                    * data：请求参数\n                    * callback：回调函数\n                    * type：响应结果的类型\n\n        3. $.post()：发送post请求\n            * 语法：$.post(url, [data], [callback], [type])\n                * 参数：\n                    * url：请求路径\n                    * data：请求参数\n                    * callback：回调函数\n                    * type：响应结果的类型\n</code></pre><h1 id=\"h1-json-\"><a name=\"JSON：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>JSON：</h1><pre><code>1. 概念： JavaScript Object Notation        JavaScript对象表示法\n    Person p = new Person();\n    p.setName(&quot;张三&quot;);\n    p.setAge(23);\n    p.setGender(&quot;男&quot;);\n\n    var p = {&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:23,&quot;gender&quot;:&quot;男&quot;};\n\n    * json现在多用于存储和交换文本信息的语法\n    * 进行数据的传输\n    * JSON 比 XML 更小、更快，更易解析。\n\n2. 语法：\n    1. 基本规则\n        * 数据在名称/值对中：json数据是由键值对构成的\n            * 键用引号(单双都行)引起来，也可以不使用引号\n            * 值得取值类型：\n                1. 数字（整数或浮点数）\n                2. 字符串（在双引号中）\n                3. 逻辑值（true 或 false）\n                4. 数组（在方括号中）    {&quot;persons&quot;:[{},{}]}\n                5. 对象（在花括号中） {&quot;address&quot;:{&quot;province&quot;：&quot;陕西&quot;....}}\n                6. null\n        * 数据由逗号分隔：多个键值对由逗号分隔\n        * 花括号保存对象：使用{}定义json 格式\n        * 方括号保存数组：[]\n    2. 获取数据:\n        1. json对象.键名\n        2. json对象[&quot;键名&quot;]\n        3. 数组对象[索引]\n        4. 遍历\n                 //1.定义基本格式\n                var person = {&quot;name&quot;: &quot;张三&quot;, age: 23, &#39;gender&#39;: true};\n\n                var ps = [{&quot;name&quot;: &quot;张三&quot;, &quot;age&quot;: 23, &quot;gender&quot;: true},\n                    {&quot;name&quot;: &quot;李四&quot;, &quot;age&quot;: 24, &quot;gender&quot;: true},\n                    {&quot;name&quot;: &quot;王五&quot;, &quot;age&quot;: 25, &quot;gender&quot;: false}];\n</code></pre><p>​<br>​<br>​            </p>\n<pre><code>                //获取person对象中所有的键和值\n                //for in 循环\n               /* for(var key in person){\n                    //这样的方式获取不行。因为相当于  person.&quot;name&quot;\n                    //alert(key + &quot;:&quot; + person.key);\n                    alert(key+&quot;:&quot;+person[key]);\n                }*/\n\n               //获取ps中的所有值\n                for (var i = 0; i &lt; ps.length; i++) {\n                    var p = ps[i];\n                    for(var key in p){\n                        alert(key+&quot;:&quot;+p[key]);\n                    }\n                }\n\n\n3. JSON数据和Java对象的相互转换\n\n    * JSON解析器：\n        * 常见的解析器：Jsonlib，Gson，fastjson，jackson\n\n    1. JSON转为Java对象\n        1. 导入jackson的相关jar包\n        2. 创建Jackson核心对象 ObjectMapper\n        3. 调用ObjectMapper的相关方法进行转换\n            1. readValue(json字符串数据,Class)\n    2. Java对象转为JSON\n        1. 使用步骤：\n            1. 导入jackson的相关jar包\n            2. 创建Jackson核心对象 ObjectMapper\n            3. 调用ObjectMapper的相关方法进行转换\n                1. 转换方法：\n                    * writeValue(参数1，obj):\n                        参数1：\n                            File：将obj对象转换为JSON字符串，并保存到指定的文件中\n                            Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中\n                            OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中\n                    * writeValueAsString(obj):将对象转为json字符串\n\n                2. 注解：\n                    1. @JsonIgnore：排除属性。\n                    2. @JsonFormat：属性值的格式化\n                        * @JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)\n\n                3. 复杂java对象转换\n                    1. List：数组\n                    2. Map：对象格式一致\n</code></pre><h1 id=\"h1--\"><a name=\"案例：\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>案例：</h1><pre><code>* 校验用户名是否存在\n    1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：\n        1. $.get(type):将最后一个参数type指定为&quot;json&quot;\n        2. 在服务器端设置MIME类型\n            response.setContentType(&quot;application/json;charset=utf-8&quot;);\n</code></pre>', '2020-08-08 18:04:27', 11, 1, '2020-08-01 13:09:56', '徐杨');
INSERT INTO `article` VALUES (41, '测试图片', '# dasdasdas\n# 打赏dons菜市场撒打算发发士大夫士大夫。\n![](http://qdv1su0k7.bkt.clouddn.com/FqFEYE_oQ2GDkPKmMgGIK2n4A_Jr)', '<h1 id=\"h1-dasdasdas\"><a name=\"dasdasdas\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>dasdasdas</h1><h1 id=\"h1--dons-\"><a name=\"打赏dons菜市场撒打算发发士大夫士大夫。\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>打赏dons菜市场撒打算发发士大夫士大夫。</h1><p><img src=\"http://qdv1su0k7.bkt.clouddn.com/FqFEYE_oQ2GDkPKmMgGIK2n4A_Jr\" alt=\"\"></p>\n', '2020-08-02 22:16:43', 7, 0, '2020-08-02 21:54:36', '许雅国');
INSERT INTO `article` VALUES (42, '我是带图片的文章', '概览\n空间管理\n跨区域同步\n统计分析\n空间管理/文件管理。\nblog--img-zone\n存储区域：华南存储量：2.23 MB对象数：10访问控制：公开空间类型：自有空间\n空间概览文件管理域名管理图片样式转码样式空间设置\n标准存储：共 7 个文件共 1.74 MB 存储量低频存储：共 0 个文件共 0 存储量归档存储：共 0 个文件共 0 存储量\n 了解文件管理\n外链域名：\n请输入文件名前缀搜索\n\n文件名\n文件类型\n存储类型\n文件大小\n最后更新\n操作\n暂无数据\n\n\n![](http://qdv1su0k7.bkt.clouddn.com/Fm6qBbqCWef6A1nO5AWG96F4WkCD)', '<p>概览<br>空间管理<br>跨区域同步<br>统计分析<br>空间管理/文件管理。<br>blog—img-zone<br>存储区域：华南存储量：2.23 MB对象数：10访问控制：公开空间类型：自有空间<br>空间概览文件管理域名管理图片样式转码样式空间设置<br>标准存储：共 7 个文件共 1.74 MB 存储量低频存储：共 0 个文件共 0 存储量归档存储：共 0 个文件共 0 存储量<br> 了解文件管理<br>外链域名：<br>请输入文件名前缀搜索</p>\n<p>文件名<br>文件类型<br>存储类型<br>文件大小<br>最后更新<br>操作<br>暂无数据</p>\n<p><img src=\"http://qdv1su0k7.bkt.clouddn.com/Fm6qBbqCWef6A1nO5AWG96F4WkCD\" alt=\"\"></p>\n', '2020-08-02 22:11:27', 11, 1, '2020-08-02 22:11:27', '徐杨');
INSERT INTO `article` VALUES (49, '大师所说的', '阿德撒旦', '<p>阿德撒旦</p>\n', '2020-08-08 18:56:42', 13, 0, '2020-08-08 18:56:42', '大苏打');
INSERT INTO `article` VALUES (51, 'ferewr', 'czsdas', '<p>czsdas</p>\n', '2020-08-08 19:04:33', 7, 0, '2020-08-08 19:04:33', 'fserwerf');
INSERT INTO `article` VALUES (54, '测试', '测试', '<p>测试</p>\n', '2020-08-08 20:13:26', 7, 0, '2020-08-08 20:13:26', '测试');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category`  (
  `cid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '分类 id',
  `category_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '分类名字',
  `created_time` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '分类创建时间',
  `updated_time` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '分类最近更新时间',
  `deleted` int(11) NOT NULL DEFAULT 0 COMMENT '逻辑删除，0 表示未删除，1 表示已删除',
  PRIMARY KEY (`cid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 14 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '分类表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES (1, '小猫咪', '2020-07-17 21:03:22', '2020-08-09 13:29:00', 0);
INSERT INTO `category` VALUES (7, 'bull', '2020-07-28 11:34:44', '2020-08-09 13:29:00', 0);
INSERT INTO `category` VALUES (8, 'rabbit', '2020-07-28 11:35:14', '2020-08-09 13:29:00', 0);
INSERT INTO `category` VALUES (10, 'snake', '2020-07-28 11:35:28', '2020-08-09 13:29:00', 0);
INSERT INTO `category` VALUES (11, 'goose', '2020-07-28 11:35:52', '2020-08-09 13:29:00', 0);
INSERT INTO `category` VALUES (13, '大撒大撒大苏打', '2020-08-08 18:51:41', '2020-08-09 13:29:00', 0);

-- ----------------------------
-- Table structure for link
-- ----------------------------
DROP TABLE IF EXISTS `link`;
CREATE TABLE `link`  (
  `lid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '链接id',
  `link_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '链接显示的名字',
  `link_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '链接的地址',
  `deleted` int(1) NOT NULL DEFAULT 0 COMMENT '0表示开启， 1表示关闭',
  PRIMARY KEY (`lid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of link
-- ----------------------------
INSERT INTO `link` VALUES (1, '阮一峰的博客', 'http://www.ruanyifeng.com/blog/', 0);
INSERT INTO `link` VALUES (2, 'Google', 'https://www.google.com/', 0);
INSERT INTO `link` VALUES (5, '111', '11', 0);

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `rid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '角色id',
  `role_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '角色名',
  `role_desc` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '角色说明',
  PRIMARY KEY (`rid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES (1, 'ADMIN', '管理员，拥有所有权限');
INSERT INTO `role` VALUES (3, 'WRITER', '用户管理页面以外的所有页面的发布权限');
INSERT INTO `role` VALUES (4, 'EDITOR', '用户管理页面以外的所有页面的编辑权限以及文章的关闭/恢复权限');
INSERT INTO `role` VALUES (5, 'DELETE', '用户管理页面以外的所有页面的删除权限');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `uid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '系统用户id',
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户名',
  `login_pass` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '登录密码',
  `operation_pass` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '进行敏感操作的密码',
  `deleted` int(1) NOT NULL DEFAULT 0 COMMENT '逻辑删除，被逻辑删除则会将关联表中拥有该角色的数据设为禁用',
  PRIMARY KEY (`uid`) USING BTREE,
  UNIQUE INDEX `username`(`username`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 19 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (2, 'user-1', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$xfM5XJXXUvq2PrJGEkxro.l0RkIUkuJActU5jLENSFv/RarCIUvyy', 0);
INSERT INTO `user` VALUES (3, 'writer-1', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$xfM5XJXXUvq2PrJGEkxro.l0RkIUkuJActU5jLENSFv/RarCIUvyy', 0);
INSERT INTO `user` VALUES (4, 'editor-1', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$xfM5XJXXUvq2PrJGEkxro.l0RkIUkuJActU5jLENSFv/RarCIUvyy', 0);
INSERT INTO `user` VALUES (5, 'delete-1', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$xfM5XJXXUvq2PrJGEkxro.l0RkIUkuJActU5jLENSFv/RarCIUvyy', 0);
INSERT INTO `user` VALUES (6, 'user-2', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$xfM5XJXXUvq2PrJGEkxro.l0RkIUkuJActU5jLENSFv/RarCIUvyy', 1);
INSERT INTO `user` VALUES (18, 'admin', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', '$2a$10$FuMap.uI1R/H1AJZ7ZrfHuGO/9KFotpMgWfI5GH6zj2Rl9xbduJP2', 0);

-- ----------------------------
-- Table structure for user_role
-- ----------------------------
DROP TABLE IF EXISTS `user_role`;
CREATE TABLE `user_role`  (
  `uid` bigint(20) NOT NULL COMMENT '用户表中的uid',
  `rid` bigint(20) NOT NULL COMMENT '角色表中的rid',
  PRIMARY KEY (`uid`, `rid`) USING BTREE,
  INDEX `FK1ef5794xnbirtsnudta6p32on`(`rid`) USING BTREE,
  CONSTRAINT `FK1ef5794xnbirtsnudta6p32on` FOREIGN KEY (`rid`) REFERENCES `role` (`rid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `FKsbjvgfdwwy5rfbiag1bwh9x2b` FOREIGN KEY (`uid`) REFERENCES `user` (`uid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of user_role
-- ----------------------------
INSERT INTO `user_role` VALUES (18, 1);
INSERT INTO `user_role` VALUES (3, 3);
INSERT INTO `user_role` VALUES (4, 4);
INSERT INTO `user_role` VALUES (5, 5);

SET FOREIGN_KEY_CHECKS = 1;
